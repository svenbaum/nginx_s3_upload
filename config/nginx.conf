
env AWS_ACCESS_KEY_ID;
env AWS_SECRET_ACCESS_KEY;
env S3_BUCKET_NAME;


worker_processes 1;

events {
  worker_connections 20000;
}

http {

   upstream backend_hosts {
     server 192.168.59.103:8080;
   }

  server {
    listen 80;
    server_name 192.168.59.103;

    # lua test function
    location /lua {
      default_type text/html;
      content_by_lua 'ngx.say(os.getenv("AWS_ACCESS_KEY_ID"));';
    }

    #pagespeed On;
    #pagespeed FileCachePath "/var/cache/ngx_pagespeed/";
    #pagespeed EnableFilters combine_css,combine_javascript;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    client_max_body_size 100000m;

    location ~* ^/upload/(.*)/(.*) {

      alias  upload/data;
      create_full_put_path  on;
      client_max_body_size 4g;
      client_body_timeout 600s;
      client_body_buffer_size 512k;
      client_body_temp_path  upload/client_tmp 1 2;

      dav_methods PUT DELETE MKCOL COPY MOVE;
      dav_ext_methods PROPFIND OPTIONS;
      dav_access user:rw group:rw all:r;

      autoindex on;

      # bucket file structure /entity/property/filename/
      set $entity $1;
      #set $property $2;
      set $filename $2;
      #set $upload_id $prefixsha$datesha;

      set_secure_random_alphanum $prefix 64;
      set_sha1 $prefixsha $prefix;
      set_by_lua $date "return ngx.cookie_time(ngx.time())";
      set_sha1 $datesha $date;
      set $upload_id $prefixsha$datesha;

       set $key $entity/$filename;
       set $bucket 'bb-docker-upload';
       set $url 'http://$bucket.s3-eu-west-1.amazonaws.com/$key';

      set_by_lua $aws_access_key "return os.getenv('AWS_ACCESS_KEY_ID')";
      set_by_lua $aws_secret_key "return os.getenv('AWS_SECRET_ACCESS_KEY')";

      set $acl public-read;
      set $canonicalized_amz_headers "x-amz-acl:$acl\nx-amz-date:$date";
      set $canonicalized_resource "/$bucket/$key";
      set $string_to_sign "$request_method\n$http_content_md5\n$http_content_type\n\n$canonicalized_amz_headers\n$canonicalized_resource";
      set_by_lua $aws_signature "return ngx.encode_base64(ngx.hmac_sha1(ngx.var.aws_secret_key, ngx.var.string_to_sign))";

      proxy_buffering         off;
      proxy_intercept_errors  on;
      proxy_set_header Authorization "AWS $aws_access_key:$aws_signature";
      proxy_set_header x-amz-acl $acl;
      proxy_set_header x-amz-date $date;
      proxy_hide_header x-amz-id-2;
      proxy_hide_header x-amz-request-id;
      add_header X-File-URL $url;

      resolver               8.8.8.8 valid=300s;
      resolver_timeout       10s;

      proxy_redirect 	     off;
      proxy_pass 	     $url;

    }
  }
}

